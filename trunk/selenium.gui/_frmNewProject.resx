<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAABolJREFUeF7t
        nd9rFFcUx/tfFYQ8BQp9EgqC4JMPhT4JhRaVUH+0tkbSGJVQAiG0QZJowGBTCUZjgw1rmtbUxhAwJTUk
        WiWx1NbW1jSVU88yJ+5c78zeyc7u3rnn+4XPy2Z3cs+cD8edcSbz2gev7yegFwigHAigHAigHAigHAig
        HAigHAigHAigHAigHAigHAigHAigHAigHAigHAiQwJGWNuvroaFeAG50954uGm4bpOv9k7QwOU+PlteJ
        Y3t/aKgR4NCOg3RmdyedO3CWrvVejTU6KbbthEaQApza1bHV6PmJOVpbekjP/3setdU9tm2HRqEF4EYP
        vN9PV7rHaG78Fj1Y/IU2n/0bta/22H5naBRCgE93Hqez735Ol09fotmvvs+90UmxrSU0vBKg/c2PqH9f
        31aj7y/co42nz6J2ND62NYZGUwSQRo+dHKWZC9O0enuF/nnyd7Tb/Ylt7aFRVwE+eeMo9b3TQ5c6LtL0
        cInu3lzystFJsdUUGrkIcKz1MPXs7abR9pGtRj99/Fe0G4sbW62hsS0BuNGloSlaLN2hP399Eu2u8GKr
        PTS2JYCWSL38TxkfiTQTXkNlD/ICAqRE6uUjEh8y2TcR60MeQICUSL2+CPD4wW+xPuQBBEiJ1OuLAH+s
        /R7rQx5AgJRIvb4IwLF9P+DzKpX9yQIESInU65MASbk9/mOsR65AgJRIvUUQgFPZI1cgQEqkXghgoCVS
        LwQw0BKpFwIYaInUWxr8pnwMXm9qTWWPXIEAKZF6aznMykKtsW2zGhAgJVIvBDDQEqkXAhhoidQLAQy0
        ROrFUYCBlki9EMBAS6ReCGCgJVIvBDDQEqkXAhhoidSLM4EG9QhfXZzlUnK+PYzvOeh9+zPq3Hm8zNGW
        Nhr5cDh6R+2RenEYaFBrbgxNlRt2wtixXW+dcL6Ll+89qPysAAGy0RQBvu69at0u84Pjv7cQIB6+Wda2
        zWp4J4DrFIAAL8P7a7uXjHsnAOMyBRopgC9HAfxFsbLWPPBSAJcpoFmAyjuVap1OXgrAVJsCmgUw1/Pt
        +dLWWrPirQDVpgAEeBneT7LWrHgrAJM2BSBAPLLWrHgtQNoUaKQAvpwJ5PfwetQIwNy8OBN9Kp5GCuDL
        YWDQAhx/8c3249bDr7zOZws3NzajT74MBIjH3JYr3gjAp4aTJgOfOjYDAeIxt+WKVwLwH5BynQIQIB5z
        W654JUDSzxhzCjRSANsOb0ZUCOA6BSBAPLLWrHgnAMdlCkCAeGStWfFSAJcpAAHikbVmxUsBONWmAASI
        R9aaFW8FqDYFGikAzgQa1BoXAThpU6CRAuAw0KDWuAqQNgV+unHnldcZCJANrwXgJE2Bgfe+sL4OAbLh
        vQBJUyAJCJAN7wXgJE0BG/UQwLbDmxG1AmSZAhoFWF9e21prVgohAMd1CmgQgJ+UxvtD4AtnZK1ZKYwA
        rlNAgwB5UhgBOLbPmWgQIMjLwl0EcJkC9RDA9zOBQVwW7iIAp9oUqIcAvh8GBnFZuKsA1aaARgE45rZc
        KZwAnLQpAAGy0RQB7s7+XG4iN4vh5wKfbxuIflo9aVMAAmSjKQLkEZaI7xxikRh+Oik3f/bL76J31B6p
        17bDmxEI0OBIvRDAQEukXghgoCVSLwQw0BKpFwIYaInUi2sCDbRE6sVhoIGWSL0QwEBLpF4IYKAlUi8E
        MNASqde2w5sRCNDgSL0QwEBLpF4IYKAlUi8EMNASqdd3AQp3WXhRIvX6JkDhLwsvSqRe3wTIEwiQEqkX
        AhhoidQLAQy0ROr1RYDV+ZVYH/IAAqRE6jW/dDWDiZ7x8p1AlX3Ig20JMNo+QqWhKVos3Sk/7i3U2GoP
        jW0JYHKs9TD17O0uizE9XCr//Z4szwD0NbZaQyMXAZLgmxj54Y58ybaIwdf0FyW2mkKjrgIkwf+92r+v
        j8ZOjtLMhWlavb3ipRi2tYdGUwRIQsS4fPpS+Zv3/YV7tPH0WdSOxse2xtDwSoAk+Nsv3z4mYvBzg/lJ
        mfWObS2hUQgBkji1q6N8iHale4zmxm/lLobtd4ZGoQVIgsU4d+AsXXtx/Dw/MUdrSw+rPojSFtu2QyNI
        AWwc2nGQzuzujInxaHk9arU9tu2EhhoBkjjS0kbde7pouG2QrvdP0sLk/JYYtveHhnoBkmAxbK+HBgRQ
        DgRQDgRQDgRQDgRQDgRQDgRQDgRQDgRQDgRQDgRQDgRQDgRQDgRQDgRQzX76Hx47p8eZ5KJUAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>